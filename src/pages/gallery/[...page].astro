---
import { getCollection } from 'astro:content'
import DefaultLayout from '../../layouts/DefaultLayout.astro'
import { Pagination } from 'accessible-astro-components'
import Card from "../../components/Card.astro"

export async function getStaticPaths({ paginate }) {
  const pics = await getCollection('gallery');
  pics.map((pic) => {
    console.debug(pic)
    return {
      params: { id: pic.id }
    }
  });
  return paginate(pics, { pageSize: 6,})
}
const { page } = Astro.props
---

<DefaultLayout
  title="Gallery"
  description="An example of a blog with dynamic content fetched from JSONPlaceholder using the title, body and userId."
>
  <section class="my-12">
    <div class="space-content container">
      <h1>Blog</h1>
      <p class="text-2xl">
        An example of a blog with dynamic content fetched from <a href="https://jsonplaceholder.typicode.com/pics"
          >JSONPlaceholder</a
        > using the title, body and userId. The Accessible Astro Card Component is used here to display al the pics.
      </p>
    </div>
  </section>
  <section class="my-12">
    <div class="container">
      <p class="text-sm"><em>picture {page.start + 1} through {page.end + 1} of {page.total} total pictures</em></p>
      <ul class="my-3">
        {
          page.data.map((pic) => (
            <li>
              <Card
                url={'/gallery/' + pic.id}
                title={pic.data.title}
                footer={'by: ' + pic.data.author}
                img = {pic.data.image.src}
                alt = {pic.data.imageAlt}
              >
              </Card>
            </li>
          ))
        }
      </ul>
      <div class="mt-12 grid place-content-center">
        <Pagination
          firstPage={page.url.prev ? '/gallery' : null}
          previousPage={page.url.prev ? page.url.prev : null}
          nextPage={page.url.next ? page.url.next : null}
          lastPage={page.url.next ? `/gallery/${Math.round(page.total / page.size)}` : null}
          currentPage={page.currentPage}
          totalPages={Math.round(page.total / page.size)}
        />
      </div>
    </div>
  </section>
</DefaultLayout>

<style lang="scss">
  ul {
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: 4rem;

    @media (min-width: 550px) {
      grid-template-columns: repeat(2, 1fr);
      grid-gap: 2rem;
    }

    @media (min-width: 950px) {
      grid-template-columns: repeat(3, 1fr);
    }
  }
</style>
